<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 자바 파일에서 사용한 annotation 설정을 여기서도 사용 할 수 있도록 해주는 설정 -->
	<annotation-driven />
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- /resources로 시작하는 자원에 대한 요청은 src/main/webapp/resources 디렉토리의 자원을 사용함 
		이 설정을 해주면 자원을 사용할 때 캐싱을 합니다. 캐싱시간도 설정할 수 있습니다. -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- controller에서 forwarding 하는 뷰 이름을 리턴했을 때 실제 출력할 뷰를 결정하기 위해서 앞이나 뒤의 공통된 
		설정을 생성 생략할 수 있고 다른 viewresolber를 추가할 수도 있음 -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="1" />
	</beans:bean>
	<!-- view dㅣ름을 가지고 직접 view를 선택할 수 있도록 해주는 viewResolver -->
	<beans:bean
		class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0" />
	</beans:bean>
	<!-- download라는 뷰이름이왔을 때 downloadview출력하도록 해주는 속성 -->
	<beans:bean id="download" class="kr.co.dajsoft.view.DownloadView" />
		
	<beans:bean id="excel" class="kr.co.dajsoft.view.ExcelView" />

	<beans:bean id="pdf" class="kr.co.dajsoft.view.PdfView" />

	<beans:bean id="json" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
	<!-- /exception 요청이 오면 input 이라는 뷰이름을 리턴하도록 설정 -->
	<view-controller path="/exception" view-name="input" />

	<beans:bean id="marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		
		<beans:property name="classesToBeBound">
			<beans:list>
				<beans:value>kr.co.dajsoft.domain.ItemReport</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="itemreport" class="org.springframework.web.servlet.view.xml.MarshallingView">
		<beans:property name="marshaller" ref="marshaller" />
		<beans:property name="modelKey" value="list" />
	</beans:bean>
	<!-- 어노테이션이 붙은 클래스의 빈을 자동생성해주는 패키지 설정 ,를 하고 다른 패키지를 추가 할 수 있습니다 . -->
	<context:component-scan base-package="kr.co.dajsoft" />
	<!-- 스프링의 컨트롤러가 처리하지 못하는 요청은 was가 처리하도록 해주는 설정 -->
	<!-- web.xml 파일에서 서블릿 설정은 /*, /, 디렉토리 패턴을 사용하는 경우 확장자가 css나 js등 도 Controller가 
		처리하려고 하기 때문에 정적 자원의 링크를 Controller 처리해 주지 않으면 404에러가 발생 -->

	<beans:bean
		class="org.springframework.orm.hibernate5.HibernateTransactionManager"
		id="transactionManager">
		<beans:property name="sessionFactory"
			ref="sessionFactory" />
	</beans:bean>

	<default-servlet-handler />
	<!-- annotation을 이용해서 트랜잭션을 사용할 수 있도록 해주는 설정 -->
	<tx:annotation-driven />
	<!-- 메시지 파일 설정 -->
	<beans:bean
		class="org.springframework.context.support.ResourceBundleMessageSource"
		id="messageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>message/label</beans:value>
				<beans:value>message/validation</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	<!-- 파일 업로드를 위한 bean 설정 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</beans:bean>	
</beans:beans>
