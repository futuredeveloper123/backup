<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 자바코드에 작성한 어노테이션을 xml에서도 적용하겠다는 설정 ,,, 어노테이션 50가지 정도 됨 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- 정적 자원의 캐싱 여부를 설정하는 것으로 webapp/resources 디렉토리에 있는 자원을 /resource 형태로 
		작성해서 사용하고 캐싱을 하겠다는 설정 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- 뷰 리졸버 설정으로 컨트롤러에서 리턴한 뷰 이름을 가지고 이 설정을 조합해서 실제 뷰 파일을 결정 함 -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- 어노테이션이 붙은 클래스의 빈을 자동으로 생성해주는 패키지를 설정 -->
	<context:component-scan
		base-package="com.dajsoft.aop" />
	<!-- 컨트롤러가 처리하지 않은 요청은 와스가 처리하도록 하는 설정 -->
	<default-servlet-handler />

	<!-- 인터셉터 설정 -->
	<interceptors>
		<interceptor>
			<!-- .jsp를 제외한 모든 요청이 오면 interceptor가 동작 -->
			<mapping path="/"/>
			<beans:ref bean="Interceptorr" />
		</interceptor>
	</interceptors>
</beans:beans>
